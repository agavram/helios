---
import { ErrorItem } from '../components/Errors/ErrorItem';
import HNStory from '../components/HNStory/HNStory';
import Layout from '../layouts/Layout.astro';
import Nav from '../layouts/Nav.astro';
import type { Response } from '../services/data';
import {
  getAskStories,
  getBestStories,
  getJobStories,
  getNewStories,
  getShowStories,
  getTopStories,
} from '../services/data';

interface Props {
  title: string;
  provider: () => Promise<Response<string[]>>;
}

const paths: { [key: string]: Props } = {
  new: { title: 'New Stories', provider: getNewStories },
  best: { title: 'Best Stories', provider: getBestStories },
  top: { title: 'Top Stories', provider: getTopStories },
  ask: { title: 'Ask', provider: getAskStories },
  show: { title: 'Show', provider: getShowStories },
  jobs: { title: 'Jobs', provider: getJobStories },
};

const { page } = Astro.params;

if (!paths[page ?? '']) {
  return Astro.redirect('/top');
}
const { title, provider } = paths[page!]!;
const stories = await provider();
---

<Layout title={title + ' | Hacker News'}>
  <main>
    <Nav />
    {
      stories.data && (
        <div class="px-2 py-4 max-w-4xl ml-auto mr-auto overflow-hidden flex flex-col gap-4">
          {stories.data.slice(0, 50).map((storyId) => (
            <HNStory id={storyId.toString()} client:only="solid-js" />
          ))}
        </div>
      )
    }
    {
      stories.error && (
        <ErrorItem
          title="An error occurred while loading"
          message="Please try again later"
        />
      )
    }
  </main>
</Layout>
