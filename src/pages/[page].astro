---
import type { GetStaticPaths } from 'astro';
import HNStory from '../components/HNStory/HNStory';
import Layout from '../layouts/Layout.astro';
import Nav from '../layouts/Nav.astro';
import {
  getAskStories,
  getBestStories,
  getJobStories,
  getNewStories,
  getShowStories,
  getTopStories,
} from '../services/data';
import type { Response } from '../services/data';
import { ErrorItem } from '../components/Errors/ErrorItem';

interface Props {
  title: string;
  provider: () => Promise<Response<number[]>>;
}

export const getStaticPaths = (async () => {
  return [
    {
      params: { page: 'new' },
      props: { title: 'New Stories', provider: getNewStories },
    },
    {
      params: { page: 'best' },
      props: { title: 'Best Stories', provider: getBestStories },
    },
    {
      params: { page: 'top' },
      props: { title: 'Top Stories', provider: getTopStories },
    },
    {
      params: { page: 'ask' },
      props: { title: 'Ask', provider: getAskStories },
    },
    {
      params: { page: 'show' },
      props: { title: 'Show', provider: getShowStories },
    },
    {
      params: { page: 'jobs' },
      props: { title: 'Jobs', provider: getJobStories },
    },
  ];
}) satisfies GetStaticPaths;

const { title, provider } = Astro.props;
const stories = await provider();
---

<Layout title={title + ' | Hacker News'}>
  <main>
    <Nav />
    {
      stories.data && (
        <div class="px-4 py-4 max-w-4xl ml-auto mr-auto overflow-hidden flex flex-col gap-4">
          {stories.data.slice(0, 50).map((storyId) => (
            <HNStory id={storyId} client:visible />
          ))}
        </div>
      )
    }
    {
      stories.error && (
        <ErrorItem
          title="An error occurred while loading"
          message="Please try again later"
        />
      )
    }
  </main>
</Layout>
